// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã
// –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

import { supabase } from './src/config/supabase.js';
import { CartService } from './src/services/cartService.js';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã
async function testCart() {
  console.log('üß™ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã...');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase
    console.log('1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase...');
    const { data, error } = await supabase.from('carts').select('count').limit(1);
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase:', error);
      return;
    }
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —Ä–∞–±–æ—Ç–∞–µ—Ç');
    
    // 2. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º sessionId –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const sessionId = CartService.generateSessionId();
    console.log('2. SessionId –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', sessionId);
    
    // 3. –°–æ–∑–¥–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
    console.log('3. –°–æ–∑–¥–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É...');
    const cart = await CartService.getOrCreateCart(null, sessionId);
    console.log('‚úÖ –ö–æ—Ä–∑–∏–Ω–∞ —Å–æ–∑–¥–∞–Ω–∞:', cart);
    
    // 4. –ü–æ–ª—É—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –±–ª—é–¥–æ
    console.log('4. –ü–æ–ª—É—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –±–ª—é–¥–æ...');
    const { data: dishes, error: dishesError } = await supabase
      .from('dishes')
      .select('*')
      .limit(1);
    
    if (dishesError || !dishes || dishes.length === 0) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –±–ª—é–¥–∞:', dishesError);
      return;
    }
    
    const testDish = dishes[0];
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –±–ª—é–¥–æ:', testDish);
    
    // 5. –î–æ–±–∞–≤–ª—è–µ–º –±–ª—é–¥–æ –≤ –∫–æ—Ä–∑–∏–Ω—É
    console.log('5. –î–æ–±–∞–≤–ª—è–µ–º –±–ª—é–¥–æ –≤ –∫–æ—Ä–∑–∏–Ω—É...');
    const cartItem = await CartService.addToCart(cart.id, testDish, 1);
    console.log('‚úÖ –ë–ª—é–¥–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É:', cartItem);
    
    // 6. –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—É—é –∫–æ—Ä–∑–∏–Ω—É
    console.log('6. –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—É—é –∫–æ—Ä–∑–∏–Ω—É...');
    const fullCart = await CartService.getFullCart(null, sessionId);
    console.log('‚úÖ –ü–æ–ª–Ω–∞—è –∫–æ—Ä–∑–∏–Ω–∞:', fullCart);
    
    // 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å
    const totalItems = await CartService.getCartTotalItems(cart.id);
    const totalPrice = await CartService.getCartTotalPrice(cart.id);
    console.log('‚úÖ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤:', totalItems);
    console.log('‚úÖ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:', totalPrice);
    
    console.log('üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ—Ä–∑–∏–Ω—ã:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testCart();
